name: Security Scanning with Safety

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Vulnerability Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt

    - name: Run Safety CLI Security Scan
      uses: pyupio/safety-action@v1
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}
        args: --detailed-output --stage cicd

    - name: Run Fallback Security Scans
      if: failure()  # Only run if Safety fails
      run: |
        echo "Safety scan failed, running fallback security tools..."
        
        # pip-audit for dependency vulnerabilities
        pip-audit --desc --format=columns || echo "pip-audit found issues"
        
        # bandit for source code security
        bandit -r passgithelper.py -f txt -ll || echo "bandit found potential issues"

    - name: Run Tests
      run: |
        python -m pytest test_passgithelper.py -v

    - name: Upload Security Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          safety-report.json
          bandit-report.txt
        retention-days: 30
